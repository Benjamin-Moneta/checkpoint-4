import {
  require_classnames
} from "./chunk-56ZTL5NY.js";
import {
  Transition_default
} from "./chunk-AUC5AODB.js";
import "./chunk-S22EOZLY.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  init_extends,
  init_inheritsLoose,
  init_objectWithoutPropertiesLoose
} from "./chunk-ZGV6ROOK.js";
import {
  require_prop_types
} from "./chunk-VSUSCY72.js";
import {
  require_react
} from "./chunk-RYO6GA3P.js";
import {
  __commonJS,
  __toModule
} from "./chunk-A5ICIBVI.js";

// node_modules/invariant/browser.js
var require_browser = __commonJS({
  "node_modules/invariant/browser.js"(exports, module) {
    "use strict";
    var invariant3 = function(condition, format, a, b, c, d, e, f) {
      if (true) {
        if (format === void 0) {
          throw new Error("invariant requires an error message argument");
        }
      }
      if (!condition) {
        var error;
        if (format === void 0) {
          error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function() {
            return args[argIndex++];
          }));
          error.name = "Invariant Violation";
        }
        error.framesToPop = 1;
        throw error;
      }
    };
    module.exports = invariant3;
  }
});

// node_modules/react-bootstrap/esm/Carousel.js
init_extends();
init_objectWithoutPropertiesLoose();

// node_modules/@restart/hooks/esm/useEventCallback.js
var import_react2 = __toModule(require_react());

// node_modules/@restart/hooks/esm/useCommittedRef.js
var import_react = __toModule(require_react());
function useCommittedRef(value) {
  var ref = (0, import_react.useRef)(value);
  (0, import_react.useEffect)(function() {
    ref.current = value;
  }, [value]);
  return ref;
}
var useCommittedRef_default = useCommittedRef;

// node_modules/@restart/hooks/esm/useEventCallback.js
function useEventCallback(fn) {
  var ref = useCommittedRef_default(fn);
  return (0, import_react2.useCallback)(function() {
    return ref.current && ref.current.apply(ref, arguments);
  }, [ref]);
}

// node_modules/@restart/hooks/esm/useUpdateEffect.js
var import_react3 = __toModule(require_react());
function useUpdateEffect(fn, deps) {
  var isFirst = (0, import_react3.useRef)(true);
  (0, import_react3.useEffect)(function() {
    if (isFirst.current) {
      isFirst.current = false;
      return;
    }
    return fn();
  }, deps);
}
var useUpdateEffect_default = useUpdateEffect;

// node_modules/@restart/hooks/esm/useTimeout.js
var import_react7 = __toModule(require_react());

// node_modules/@restart/hooks/esm/useMounted.js
var import_react4 = __toModule(require_react());
function useMounted() {
  var mounted = (0, import_react4.useRef)(true);
  var isMounted = (0, import_react4.useRef)(function() {
    return mounted.current;
  });
  (0, import_react4.useEffect)(function() {
    return function() {
      mounted.current = false;
    };
  }, []);
  return isMounted.current;
}

// node_modules/@restart/hooks/esm/useUpdatedRef.js
var import_react5 = __toModule(require_react());
function useUpdatedRef(value) {
  var valueRef = (0, import_react5.useRef)(value);
  valueRef.current = value;
  return valueRef;
}

// node_modules/@restart/hooks/esm/useWillUnmount.js
var import_react6 = __toModule(require_react());
function useWillUnmount(fn) {
  var onUnmount = useUpdatedRef(fn);
  (0, import_react6.useEffect)(function() {
    return function() {
      return onUnmount.current();
    };
  }, []);
}

// node_modules/@restart/hooks/esm/useTimeout.js
var MAX_DELAY_MS = Math.pow(2, 31) - 1;
function setChainedTimeout(handleRef, fn, timeoutAtMs) {
  var delayMs = timeoutAtMs - Date.now();
  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function() {
    return setChainedTimeout(handleRef, fn, timeoutAtMs);
  }, MAX_DELAY_MS);
}
function useTimeout() {
  var isMounted = useMounted();
  var handleRef = (0, import_react7.useRef)();
  useWillUnmount(function() {
    return clearTimeout(handleRef.current);
  });
  return (0, import_react7.useMemo)(function() {
    var clear = function clear2() {
      return clearTimeout(handleRef.current);
    };
    function set(fn, delayMs) {
      if (delayMs === void 0) {
        delayMs = 0;
      }
      if (!isMounted())
        return;
      clear();
      if (delayMs <= MAX_DELAY_MS) {
        handleRef.current = setTimeout(fn, delayMs);
      } else {
        setChainedTimeout(handleRef, fn, Date.now() + delayMs);
      }
    }
    return {
      set,
      clear
    };
  }, []);
}

// node_modules/react-bootstrap/esm/Carousel.js
var import_classnames3 = __toModule(require_classnames());
var import_prop_types = __toModule(require_prop_types());
var import_react15 = __toModule(require_react());

// node_modules/uncontrollable/lib/esm/hook.js
init_extends();
init_objectWithoutPropertiesLoose();
var import_react8 = __toModule(require_react());

// node_modules/uncontrollable/lib/esm/utils.js
var import_invariant = __toModule(require_browser());
function defaultKey(key) {
  return "default" + key.charAt(0).toUpperCase() + key.substr(1);
}

// node_modules/uncontrollable/lib/esm/hook.js
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function useUncontrolledProp(propValue, defaultValue, handler) {
  var wasPropRef = (0, import_react8.useRef)(propValue !== void 0);
  var _useState = (0, import_react8.useState)(defaultValue), stateValue = _useState[0], setState = _useState[1];
  var isProp2 = propValue !== void 0;
  var wasProp = wasPropRef.current;
  wasPropRef.current = isProp2;
  if (!isProp2 && wasProp && stateValue !== defaultValue) {
    setState(defaultValue);
  }
  return [isProp2 ? propValue : stateValue, (0, import_react8.useCallback)(function(value) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    if (handler)
      handler.apply(void 0, [value].concat(args));
    setState(value);
  }, [handler])];
}
function useUncontrolled(props, config) {
  return Object.keys(config).reduce(function(result, fieldName) {
    var _extends2;
    var _ref = result, defaultValue = _ref[defaultKey(fieldName)], propsValue = _ref[fieldName], rest = _objectWithoutPropertiesLoose(_ref, [defaultKey(fieldName), fieldName].map(_toPropertyKey));
    var handlerName = config[fieldName];
    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]), value = _useUncontrolledProp[0], handler = _useUncontrolledProp[1];
    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));
  }, props);
}

// node_modules/uncontrollable/lib/esm/uncontrollable.js
init_objectWithoutPropertiesLoose();
init_extends();
init_inheritsLoose();
var import_react9 = __toModule(require_react());

// node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js
function componentWillMount() {
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== void 0) {
    this.setState(state);
  }
}
function componentWillReceiveProps(nextProps) {
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== void 0 ? state : null;
  }
  this.setState(updater.bind(this));
}
function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

// node_modules/uncontrollable/lib/esm/uncontrollable.js
var import_invariant2 = __toModule(require_browser());

// node_modules/react-bootstrap/esm/createWithBsPrefix.js
init_extends();
init_objectWithoutPropertiesLoose();
var import_classnames = __toModule(require_classnames());

// node_modules/dom-helpers/esm/camelize.js
var rHyphen = /-(.)/g;
function camelize(string) {
  return string.replace(rHyphen, function(_, chr) {
    return chr.toUpperCase();
  });
}

// node_modules/react-bootstrap/esm/createWithBsPrefix.js
var import_react11 = __toModule(require_react());

// node_modules/react-bootstrap/esm/ThemeProvider.js
init_extends();
var import_react10 = __toModule(require_react());
var ThemeContext = import_react10.default.createContext({});
var Consumer = ThemeContext.Consumer;
var Provider = ThemeContext.Provider;
function useBootstrapPrefix(prefix, defaultPrefix) {
  var prefixes = (0, import_react10.useContext)(ThemeContext);
  return prefix || prefixes[defaultPrefix] || defaultPrefix;
}

// node_modules/react-bootstrap/esm/createWithBsPrefix.js
var _excluded = ["className", "bsPrefix", "as"];
var pascalCase = function pascalCase2(str) {
  return str[0].toUpperCase() + camelize(str).slice(1);
};
function createWithBsPrefix(prefix, _temp) {
  var _ref = _temp === void 0 ? {} : _temp, _ref$displayName = _ref.displayName, displayName = _ref$displayName === void 0 ? pascalCase(prefix) : _ref$displayName, Component = _ref.Component, defaultProps2 = _ref.defaultProps;
  var BsComponent = import_react11.default.forwardRef(function(_ref2, ref) {
    var className = _ref2.className, bsPrefix = _ref2.bsPrefix, _ref2$as = _ref2.as, Tag = _ref2$as === void 0 ? Component || "div" : _ref2$as, props = _objectWithoutPropertiesLoose(_ref2, _excluded);
    var resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);
    return import_react11.default.createElement(Tag, _extends({
      ref,
      className: (0, import_classnames.default)(className, resolvedPrefix)
    }, props));
  });
  BsComponent.defaultProps = defaultProps2;
  BsComponent.displayName = displayName;
  return BsComponent;
}

// node_modules/react-bootstrap/esm/CarouselCaption.js
var CarouselCaption_default = createWithBsPrefix("carousel-caption");

// node_modules/react-bootstrap/esm/CarouselItem.js
init_extends();
init_objectWithoutPropertiesLoose();
var import_classnames2 = __toModule(require_classnames());
var import_react12 = __toModule(require_react());
var _excluded2 = ["as", "bsPrefix", "children", "className"];
var CarouselItem = import_react12.default.forwardRef(function(_ref, ref) {
  var _ref$as = _ref.as, Component = _ref$as === void 0 ? "div" : _ref$as, bsPrefix = _ref.bsPrefix, children = _ref.children, className = _ref.className, props = _objectWithoutPropertiesLoose(_ref, _excluded2);
  var finalClassName = (0, import_classnames2.default)(className, useBootstrapPrefix(bsPrefix, "carousel-item"));
  return import_react12.default.createElement(Component, _extends({
    ref
  }, props, {
    className: finalClassName
  }), children);
});
CarouselItem.displayName = "CarouselItem";
var CarouselItem_default = CarouselItem;

// node_modules/react-bootstrap/esm/ElementChildren.js
var import_react13 = __toModule(require_react());
function map(children, func) {
  var index = 0;
  return import_react13.default.Children.map(children, function(child) {
    return import_react13.default.isValidElement(child) ? func(child, index++) : child;
  });
}
function forEach(children, func) {
  var index = 0;
  import_react13.default.Children.forEach(children, function(child) {
    if (import_react13.default.isValidElement(child))
      func(child, index++);
  });
}

// node_modules/react-bootstrap/esm/SafeAnchor.js
init_extends();
init_objectWithoutPropertiesLoose();
var import_react14 = __toModule(require_react());

// node_modules/react-bootstrap/esm/createChainedFunction.js
function createChainedFunction() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }
  return funcs.filter(function(f) {
    return f != null;
  }).reduce(function(acc, f) {
    if (typeof f !== "function") {
      throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");
    }
    if (acc === null)
      return f;
    return function chainedFunction() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      acc.apply(this, args);
      f.apply(this, args);
    };
  }, null);
}
var createChainedFunction_default = createChainedFunction;

// node_modules/react-bootstrap/esm/SafeAnchor.js
var _excluded3 = ["as", "disabled", "onKeyDown"];
function isTrivialHref(href) {
  return !href || href.trim() === "#";
}
var SafeAnchor = import_react14.default.forwardRef(function(_ref, ref) {
  var _ref$as = _ref.as, Component = _ref$as === void 0 ? "a" : _ref$as, disabled = _ref.disabled, onKeyDown = _ref.onKeyDown, props = _objectWithoutPropertiesLoose(_ref, _excluded3);
  var handleClick = function handleClick2(event) {
    var href = props.href, onClick = props.onClick;
    if (disabled || isTrivialHref(href)) {
      event.preventDefault();
    }
    if (disabled) {
      event.stopPropagation();
      return;
    }
    if (onClick) {
      onClick(event);
    }
  };
  var handleKeyDown = function handleKeyDown2(event) {
    if (event.key === " ") {
      event.preventDefault();
      handleClick(event);
    }
  };
  if (isTrivialHref(props.href)) {
    props.role = props.role || "button";
    props.href = props.href || "#";
  }
  if (disabled) {
    props.tabIndex = -1;
    props["aria-disabled"] = true;
  }
  return import_react14.default.createElement(Component, _extends({
    ref
  }, props, {
    onClick: handleClick,
    onKeyDown: createChainedFunction_default(handleKeyDown, onKeyDown)
  }));
});
SafeAnchor.displayName = "SafeAnchor";
var SafeAnchor_default = SafeAnchor;

// node_modules/dom-helpers/esm/ownerDocument.js
function ownerDocument(node) {
  return node && node.ownerDocument || document;
}

// node_modules/dom-helpers/esm/ownerWindow.js
function ownerWindow(node) {
  var doc = ownerDocument(node);
  return doc && doc.defaultView || window;
}

// node_modules/dom-helpers/esm/getComputedStyle.js
function getComputedStyle2(node, psuedoElement) {
  return ownerWindow(node).getComputedStyle(node, psuedoElement);
}

// node_modules/dom-helpers/esm/hyphenate.js
var rUpper = /([A-Z])/g;
function hyphenate(string) {
  return string.replace(rUpper, "-$1").toLowerCase();
}

// node_modules/dom-helpers/esm/hyphenateStyle.js
var msPattern = /^ms-/;
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, "-ms-");
}

// node_modules/dom-helpers/esm/isTransform.js
var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;
function isTransform(value) {
  return !!(value && supportedTransforms.test(value));
}

// node_modules/dom-helpers/esm/css.js
function style(node, property) {
  var css = "";
  var transforms = "";
  if (typeof property === "string") {
    return node.style.getPropertyValue(hyphenateStyleName(property)) || getComputedStyle2(node).getPropertyValue(hyphenateStyleName(property));
  }
  Object.keys(property).forEach(function(key) {
    var value = property[key];
    if (!value && value !== 0) {
      node.style.removeProperty(hyphenateStyleName(key));
    } else if (isTransform(key)) {
      transforms += key + "(" + value + ") ";
    } else {
      css += hyphenateStyleName(key) + ": " + value + ";";
    }
  });
  if (transforms) {
    css += "transform: " + transforms + ";";
  }
  node.style.cssText += ";" + css;
}
var css_default = style;

// node_modules/dom-helpers/esm/canUseDOM.js
var canUseDOM_default = !!(typeof window !== "undefined" && window.document && window.document.createElement);

// node_modules/dom-helpers/esm/addEventListener.js
var optionsSupported = false;
var onceSupported = false;
try {
  options = {
    get passive() {
      return optionsSupported = true;
    },
    get once() {
      return onceSupported = optionsSupported = true;
    }
  };
  if (canUseDOM_default) {
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, true);
  }
} catch (e) {
}
var options;
function addEventListener(node, eventName, handler, options) {
  if (options && typeof options !== "boolean" && !onceSupported) {
    var once = options.once, capture = options.capture;
    var wrappedHandler = handler;
    if (!onceSupported && once) {
      wrappedHandler = handler.__once || function onceHandler(event) {
        this.removeEventListener(eventName, onceHandler, capture);
        handler.call(this, event);
      };
      handler.__once = wrappedHandler;
    }
    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);
  }
  node.addEventListener(eventName, handler, options);
}
var addEventListener_default = addEventListener;

// node_modules/dom-helpers/esm/removeEventListener.js
function removeEventListener(node, eventName, handler, options) {
  var capture = options && typeof options !== "boolean" ? options.capture : options;
  node.removeEventListener(eventName, handler, capture);
  if (handler.__once) {
    node.removeEventListener(eventName, handler.__once, capture);
  }
}
var removeEventListener_default = removeEventListener;

// node_modules/dom-helpers/esm/listen.js
function listen(node, eventName, handler, options) {
  addEventListener_default(node, eventName, handler, options);
  return function() {
    removeEventListener_default(node, eventName, handler, options);
  };
}
var listen_default = listen;

// node_modules/dom-helpers/esm/triggerEvent.js
function triggerEvent(node, eventName, bubbles, cancelable) {
  if (bubbles === void 0) {
    bubbles = false;
  }
  if (cancelable === void 0) {
    cancelable = true;
  }
  if (node) {
    var event = document.createEvent("HTMLEvents");
    event.initEvent(eventName, bubbles, cancelable);
    node.dispatchEvent(event);
  }
}

// node_modules/dom-helpers/esm/transitionEnd.js
function parseDuration(node) {
  var str = css_default(node, "transitionDuration") || "";
  var mult = str.indexOf("ms") === -1 ? 1e3 : 1;
  return parseFloat(str) * mult;
}
function emulateTransitionEnd(element, duration, padding) {
  if (padding === void 0) {
    padding = 5;
  }
  var called = false;
  var handle = setTimeout(function() {
    if (!called)
      triggerEvent(element, "transitionend", true);
  }, duration + padding);
  var remove = listen_default(element, "transitionend", function() {
    called = true;
  }, {
    once: true
  });
  return function() {
    clearTimeout(handle);
    remove();
  };
}
function transitionEnd(element, handler, duration, padding) {
  if (duration == null)
    duration = parseDuration(element) || 0;
  var removeEmulate = emulateTransitionEnd(element, duration, padding);
  var remove = listen_default(element, "transitionend", handler);
  return function() {
    removeEmulate();
    remove();
  };
}

// node_modules/react-bootstrap/esm/transitionEndListener.js
function parseDuration2(node, property) {
  var str = css_default(node, property) || "";
  var mult = str.indexOf("ms") === -1 ? 1e3 : 1;
  return parseFloat(str) * mult;
}
function transitionEndListener(element, handler) {
  var duration = parseDuration2(element, "transitionDuration");
  var delay = parseDuration2(element, "transitionDelay");
  var remove = transitionEnd(element, function(e) {
    if (e.target === element) {
      remove();
      handler(e);
    }
  }, duration + delay);
}

// node_modules/react-bootstrap/esm/triggerBrowserReflow.js
function triggerBrowserReflow(node) {
  node.offsetHeight;
}

// node_modules/react-bootstrap/esm/Carousel.js
var _excluded4 = ["as", "bsPrefix", "slide", "fade", "controls", "indicators", "activeIndex", "onSelect", "onSlide", "onSlid", "interval", "keyboard", "onKeyDown", "pause", "onMouseOver", "onMouseOut", "wrap", "touch", "onTouchStart", "onTouchMove", "onTouchEnd", "prevIcon", "prevLabel", "nextIcon", "nextLabel", "className", "children"];
var SWIPE_THRESHOLD = 40;
var propTypes = {
  bsPrefix: import_prop_types.default.string,
  as: import_prop_types.default.elementType,
  slide: import_prop_types.default.bool,
  fade: import_prop_types.default.bool,
  controls: import_prop_types.default.bool,
  indicators: import_prop_types.default.bool,
  activeIndex: import_prop_types.default.number,
  onSelect: import_prop_types.default.func,
  onSlide: import_prop_types.default.func,
  onSlid: import_prop_types.default.func,
  interval: import_prop_types.default.number,
  keyboard: import_prop_types.default.bool,
  pause: import_prop_types.default.oneOf(["hover", false]),
  wrap: import_prop_types.default.bool,
  touch: import_prop_types.default.bool,
  prevIcon: import_prop_types.default.node,
  prevLabel: import_prop_types.default.string,
  nextIcon: import_prop_types.default.node,
  nextLabel: import_prop_types.default.string
};
var defaultProps = {
  slide: true,
  fade: false,
  controls: true,
  indicators: true,
  defaultActiveIndex: 0,
  interval: 5e3,
  keyboard: true,
  pause: "hover",
  wrap: true,
  touch: true,
  prevIcon: import_react15.default.createElement("span", {
    "aria-hidden": "true",
    className: "carousel-control-prev-icon"
  }),
  prevLabel: "Previous",
  nextIcon: import_react15.default.createElement("span", {
    "aria-hidden": "true",
    className: "carousel-control-next-icon"
  }),
  nextLabel: "Next"
};
function isVisible(element) {
  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {
    return false;
  }
  var elementStyle = getComputedStyle(element);
  return elementStyle.display !== "none" && elementStyle.visibility !== "hidden" && getComputedStyle(element.parentNode).display !== "none";
}
function CarouselFunc(uncontrolledProps, ref) {
  var _useUncontrolled = useUncontrolled(uncontrolledProps, {
    activeIndex: "onSelect"
  }), _useUncontrolled$as = _useUncontrolled.as, Component = _useUncontrolled$as === void 0 ? "div" : _useUncontrolled$as, bsPrefix = _useUncontrolled.bsPrefix, slide = _useUncontrolled.slide, fade = _useUncontrolled.fade, controls = _useUncontrolled.controls, indicators = _useUncontrolled.indicators, activeIndex = _useUncontrolled.activeIndex, onSelect = _useUncontrolled.onSelect, onSlide = _useUncontrolled.onSlide, onSlid = _useUncontrolled.onSlid, interval = _useUncontrolled.interval, keyboard = _useUncontrolled.keyboard, onKeyDown = _useUncontrolled.onKeyDown, pause = _useUncontrolled.pause, onMouseOver = _useUncontrolled.onMouseOver, onMouseOut = _useUncontrolled.onMouseOut, wrap = _useUncontrolled.wrap, touch = _useUncontrolled.touch, onTouchStart = _useUncontrolled.onTouchStart, onTouchMove = _useUncontrolled.onTouchMove, onTouchEnd = _useUncontrolled.onTouchEnd, prevIcon = _useUncontrolled.prevIcon, prevLabel = _useUncontrolled.prevLabel, nextIcon = _useUncontrolled.nextIcon, nextLabel = _useUncontrolled.nextLabel, className = _useUncontrolled.className, children = _useUncontrolled.children, props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded4);
  var prefix = useBootstrapPrefix(bsPrefix, "carousel");
  var nextDirectionRef = (0, import_react15.useRef)(null);
  var _useState = (0, import_react15.useState)("next"), direction = _useState[0], setDirection = _useState[1];
  var _useState2 = (0, import_react15.useState)(false), paused = _useState2[0], setPaused = _useState2[1];
  var _useState3 = (0, import_react15.useState)(false), isSliding = _useState3[0], setIsSliding = _useState3[1];
  var _useState4 = (0, import_react15.useState)(activeIndex || 0), renderedActiveIndex = _useState4[0], setRenderedActiveIndex = _useState4[1];
  if (!isSliding && activeIndex !== renderedActiveIndex) {
    if (nextDirectionRef.current) {
      setDirection(nextDirectionRef.current);
    } else {
      setDirection((activeIndex || 0) > renderedActiveIndex ? "next" : "prev");
    }
    if (slide) {
      setIsSliding(true);
    }
    setRenderedActiveIndex(activeIndex || 0);
  }
  (0, import_react15.useEffect)(function() {
    if (nextDirectionRef.current) {
      nextDirectionRef.current = null;
    }
  });
  var numChildren = 0;
  var activeChildInterval;
  forEach(children, function(child, index) {
    ++numChildren;
    if (index === activeIndex) {
      activeChildInterval = child.props.interval;
    }
  });
  var activeChildIntervalRef = useCommittedRef_default(activeChildInterval);
  var prev = (0, import_react15.useCallback)(function(event) {
    if (isSliding) {
      return;
    }
    var nextActiveIndex = renderedActiveIndex - 1;
    if (nextActiveIndex < 0) {
      if (!wrap) {
        return;
      }
      nextActiveIndex = numChildren - 1;
    }
    nextDirectionRef.current = "prev";
    if (onSelect) {
      onSelect(nextActiveIndex, event);
    }
  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);
  var next = useEventCallback(function(event) {
    if (isSliding) {
      return;
    }
    var nextActiveIndex = renderedActiveIndex + 1;
    if (nextActiveIndex >= numChildren) {
      if (!wrap) {
        return;
      }
      nextActiveIndex = 0;
    }
    nextDirectionRef.current = "next";
    if (onSelect) {
      onSelect(nextActiveIndex, event);
    }
  });
  var elementRef = (0, import_react15.useRef)();
  (0, import_react15.useImperativeHandle)(ref, function() {
    return {
      element: elementRef.current,
      prev,
      next
    };
  });
  var nextWhenVisible = useEventCallback(function() {
    if (!document.hidden && isVisible(elementRef.current)) {
      next();
    }
  });
  var slideDirection = direction === "next" ? "left" : "right";
  useUpdateEffect_default(function() {
    if (slide) {
      return;
    }
    if (onSlide) {
      onSlide(renderedActiveIndex, slideDirection);
    }
    if (onSlid) {
      onSlid(renderedActiveIndex, slideDirection);
    }
  }, [renderedActiveIndex]);
  var orderClassName = prefix + "-item-" + direction;
  var directionalClassName = prefix + "-item-" + slideDirection;
  var handleEnter = (0, import_react15.useCallback)(function(node) {
    triggerBrowserReflow(node);
    if (onSlide) {
      onSlide(renderedActiveIndex, slideDirection);
    }
  }, [onSlide, renderedActiveIndex, slideDirection]);
  var handleEntered = (0, import_react15.useCallback)(function() {
    setIsSliding(false);
    if (onSlid) {
      onSlid(renderedActiveIndex, slideDirection);
    }
  }, [onSlid, renderedActiveIndex, slideDirection]);
  var handleKeyDown = (0, import_react15.useCallback)(function(event) {
    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {
      switch (event.key) {
        case "ArrowLeft":
          event.preventDefault();
          prev(event);
          return;
        case "ArrowRight":
          event.preventDefault();
          next(event);
          return;
        default:
      }
    }
    if (onKeyDown) {
      onKeyDown(event);
    }
  }, [keyboard, onKeyDown, prev, next]);
  var handleMouseOver = (0, import_react15.useCallback)(function(event) {
    if (pause === "hover") {
      setPaused(true);
    }
    if (onMouseOver) {
      onMouseOver(event);
    }
  }, [pause, onMouseOver]);
  var handleMouseOut = (0, import_react15.useCallback)(function(event) {
    setPaused(false);
    if (onMouseOut) {
      onMouseOut(event);
    }
  }, [onMouseOut]);
  var touchStartXRef = (0, import_react15.useRef)(0);
  var touchDeltaXRef = (0, import_react15.useRef)(0);
  var touchUnpauseTimeout = useTimeout();
  var handleTouchStart = (0, import_react15.useCallback)(function(event) {
    touchStartXRef.current = event.touches[0].clientX;
    touchDeltaXRef.current = 0;
    if (pause === "hover") {
      setPaused(true);
    }
    if (onTouchStart) {
      onTouchStart(event);
    }
  }, [pause, onTouchStart]);
  var handleTouchMove = (0, import_react15.useCallback)(function(event) {
    if (event.touches && event.touches.length > 1) {
      touchDeltaXRef.current = 0;
    } else {
      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;
    }
    if (onTouchMove) {
      onTouchMove(event);
    }
  }, [onTouchMove]);
  var handleTouchEnd = (0, import_react15.useCallback)(function(event) {
    if (touch) {
      var touchDeltaX = touchDeltaXRef.current;
      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {
        if (touchDeltaX > 0) {
          prev(event);
        } else {
          next(event);
        }
      }
    }
    if (pause === "hover") {
      touchUnpauseTimeout.set(function() {
        setPaused(false);
      }, interval || void 0);
    }
    if (onTouchEnd) {
      onTouchEnd(event);
    }
  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);
  var shouldPlay = interval != null && !paused && !isSliding;
  var intervalHandleRef = (0, import_react15.useRef)();
  (0, import_react15.useEffect)(function() {
    var _ref, _activeChildIntervalR;
    if (!shouldPlay) {
      return void 0;
    }
    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : next, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : void 0);
    return function() {
      if (intervalHandleRef.current !== null) {
        clearInterval(intervalHandleRef.current);
      }
    };
  }, [shouldPlay, next, activeChildIntervalRef, interval, nextWhenVisible]);
  var indicatorOnClicks = (0, import_react15.useMemo)(function() {
    return indicators && Array.from({
      length: numChildren
    }, function(_, index) {
      return function(event) {
        if (onSelect) {
          onSelect(index, event);
        }
      };
    });
  }, [indicators, numChildren, onSelect]);
  return import_react15.default.createElement(Component, _extends({
    ref: elementRef
  }, props, {
    onKeyDown: handleKeyDown,
    onMouseOver: handleMouseOver,
    onMouseOut: handleMouseOut,
    onTouchStart: handleTouchStart,
    onTouchMove: handleTouchMove,
    onTouchEnd: handleTouchEnd,
    className: (0, import_classnames3.default)(className, prefix, slide && "slide", fade && prefix + "-fade")
  }), indicators && import_react15.default.createElement("ol", {
    className: prefix + "-indicators"
  }, map(children, function(_child, index) {
    return import_react15.default.createElement("li", {
      key: index,
      className: index === renderedActiveIndex ? "active" : void 0,
      onClick: indicatorOnClicks ? indicatorOnClicks[index] : void 0
    });
  })), import_react15.default.createElement("div", {
    className: prefix + "-inner"
  }, map(children, function(child, index) {
    var isActive = index === renderedActiveIndex;
    return slide ? import_react15.default.createElement(Transition_default, {
      in: isActive,
      onEnter: isActive ? handleEnter : void 0,
      onEntered: isActive ? handleEntered : void 0,
      addEndListener: transitionEndListener
    }, function(status) {
      return import_react15.default.cloneElement(child, {
        className: (0, import_classnames3.default)(child.props.className, isActive && status !== "entered" && orderClassName, (status === "entered" || status === "exiting") && "active", (status === "entering" || status === "exiting") && directionalClassName)
      });
    }) : import_react15.default.cloneElement(child, {
      className: (0, import_classnames3.default)(child.props.className, isActive && "active")
    });
  })), controls && import_react15.default.createElement(import_react15.default.Fragment, null, (wrap || activeIndex !== 0) && import_react15.default.createElement(SafeAnchor_default, {
    className: prefix + "-control-prev",
    onClick: prev
  }, prevIcon, prevLabel && import_react15.default.createElement("span", {
    className: "sr-only"
  }, prevLabel)), (wrap || activeIndex !== numChildren - 1) && import_react15.default.createElement(SafeAnchor_default, {
    className: prefix + "-control-next",
    onClick: next
  }, nextIcon, nextLabel && import_react15.default.createElement("span", {
    className: "sr-only"
  }, nextLabel))));
}
var Carousel = import_react15.default.forwardRef(CarouselFunc);
Carousel.displayName = "Carousel";
Carousel.propTypes = propTypes;
Carousel.defaultProps = defaultProps;
Carousel.Caption = CarouselCaption_default;
Carousel.Item = CarouselItem_default;
var Carousel_default = Carousel;

// dep:react-bootstrap_Carousel
var react_bootstrap_Carousel_default = Carousel_default;
export {
  react_bootstrap_Carousel_default as default
};
//# sourceMappingURL=react-bootstrap_Carousel.js.map
